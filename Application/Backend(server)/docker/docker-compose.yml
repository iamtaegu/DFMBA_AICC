version: '1.0'
services:
  configserver:
    image: aicc/config:0.0.1-SNAPSHOT
    ports:
      - "8888:8888"
    networks:
      backend:
        aliases:
          - "configserver"
  eurekaserver:
    image: aicc/eureka-server:0.0.1-SNAPSHOT
    ports:
      - "8761:8761"
    depends_on:
#      - database
      - configserver
    networks:
      backend:
        aliases:
          - "eurekaserver"
#  eureka-auth:
#    image: aicc/eureka-auth-client:0.0.1-SNAPSHOT
#    environment:
#      PROFILE: "dev"
#      CONFIGSERVER_URI: "http://configserver:8888"
#      CONFIGSERVER_PORT: "8888"
#    depends_on:
#      - database
#      - configserver
#      - eurekaserver
#    networks:
#      backend:
#        aliases:
#          - "eurekaauth"

#  database:
#    image: postgres:latest
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_USER: "postgres"
#      POSTGRES_PASSWORD: "postgres"
#      POSTGRES_DB:       "aicc"
#    volumes:
#        - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
#        - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
#    networks:
#      backend:
#        aliases:
#          - "database"
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
      
networks:
  backend:
    driver: bridge
